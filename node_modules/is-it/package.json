{
  "name": "is-it",
  "description": "simple validations",
  "version": "1.0.3",
  "keywords": [
    "is",
    "validation"
  ],
  "homepage": "http://github.com/mrDarcyMurphy/is",
  "author": {
    "name": "Darcy Murphy",
    "email": "mrDarcyMurphy@gmail.com",
    "url": "http://github.com/mrDarcyMurphy"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mrDarcyMurphy/is.git"
  },
  "main": "./lib/is.js",
  "devDependencies": {
    "mocha": "*",
    "grunt": "0.4.x",
    "grunt-contrib-uglify": "0.1.x",
    "grunt-contrib-jshint": "~0.2.0",
    "grunt-simple-mocha": "~0.3.2"
  },
  "testling": {
    "files": "test/*.js",
    "harness": "mocha",
    "browsers": {
      "ie": [
        9,
        10
      ],
      "firefox": [
        19,
        "nightly"
      ],
      "chrome": [
        25,
        "canary"
      ],
      "safari": [
        5.1,
        6
      ],
      "opera": [
        12,
        "next"
      ],
      "iphone": [
        6
      ],
      "ipad": [
        6
      ],
      "android-browser": [
        4.2
      ]
    }
  },
  "readme": "# is-it\n\nA simple validation module striving for code minimalism, a clear declarative syntax, and a thorough test suite.\n\nPairs with [prove](https://github.com/mikefrey/prove) for validation sugar.\n\n[![browser support](http://ci.testling.com/mrDarcyMurphy/is.png)](http://ci.testling.com/mrDarcyMurphy/is)\n\n## Installation\n\n```\nnpm install is-it\n```\n\n## Usage\n\n```javascript\nvar is = require('is-it')\n\nvar metal = \"666\"; // |..|.  .|..|\n\nif (is.present(metal) && is.aNumber(metal)) {\n  headBang();\n}\n```\n\nFor now, check the source and tests for a full run down of how things work.\n\n\n## Types of Validations\n\n\n### Operators\n\n* `equal`, `eq`\n* `greaterThan`, `gt`\n* `greaterThanOrEqualTo`, `gte`\n* `lessThan`, `lt`\n* `lessThanOrEqualTo`, `lte`\n\n\n### Primitives\n\n* `array`, `arr`\n* `boolean`, `bool`\n* `func`\n* `nil`\n* `undef`\n* `present`\n\n\n### Strings\n\n* `string`, `str`\n* `emptyString`, `emtStr`\n\n\n### Numbers\n\n* `number`, `num`\n* `aNumber`, `aNum`\n* `integer`, `int`\n* `aInteger`, `aInt`\n* `zero`\n* `aZero`\n\n\n### Dates\n\n* `date`\n* `sameDate`\n* `today`\n* `futureDate`, `future`\n* `pastDate`, `past`\n\n\n### Antonyms\n\n`is.not[methodName]` will return the inverse all methods.\n\n```javascript\nis.not.greaterThan(1, 2) // true : 1 is not greater than 2\n```\n",
  "readmeFilename": "README.md",
  "_id": "is-it@1.0.3",
  "_from": "is-it@"
}
